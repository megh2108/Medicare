{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const logoutRequests = Promise.all([fetch('http://localhost:6004/user-logout', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    }), fetch('http://localhost:6004/doctor-logout', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    }), fetch('http://localhost:6004/google-logout', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    })]);\n    logoutRequests.then(responses => {\n      // Check if any of the responses has a status other than 200\n\n      if (responses.status == 200) {\n        navigate('/Login');\n      } else if (responses.status == 201) {\n        navigate('/Login');\n      }\n      const hasError = responses.some(res => res.status !== 200);\n      if (hasError) {\n        const error = new Error('Logout failed.');\n        throw error;\n      }\n\n      // Navigate to the login page after successful logout\n      // navigate('/Login');\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  // useEffect(() => {\n\n  //     fetch('http://localhost:6004/logout', {\n  //         method: \"GET\",\n  //         headers: {\n  //             Accept: \"appllication/json\",\n  //             \"Content-Type\": \"application/json\"\n  //         },\n  //         credentials: \"include\"\n\n  //     }).then((res) => {\n  //         // dispatch({ type: \"USER\", payload: false })\n  //         navigate('/Login');\n  //         if (res.status != 200) {\n  //             const error = new Error(res.error);\n  //             throw error;\n  //         }\n  //     }).catch((err) => {\n  //         console.log(err);\n  //     });\n  // },[]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Logout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useEffect","Navigate","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Logout","_s","navigate","logoutRequests","Promise","all","fetch","method","headers","Accept","credentials","then","responses","status","hasError","some","res","error","Error","catch","err","console","_c","$RefreshReg$"],"sources":["H:/BVM/8th SEM Subject/Medicare/client/src/Components/General/Logout/Logout.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Logout = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        const logoutRequests = Promise.all([\r\n            fetch('http://localhost:6004/user-logout', {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n            }),\r\n            fetch('http://localhost:6004/doctor-logout', {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n            }),\r\n            fetch('http://localhost:6004/google-logout', {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n            }),\r\n        ]);\r\n\r\n        logoutRequests\r\n            .then((responses) => {\r\n                // Check if any of the responses has a status other than 200\r\n\r\n                if(responses.status == 200){\r\n                    navigate('/Login');\r\n                }\r\n                else if(responses.status == 201){\r\n                    navigate('/Login');\r\n                }\r\n                \r\n                const hasError = responses.some((res) => res.status !== 200);\r\n\r\n                if (hasError) {\r\n                    const error = new Error('Logout failed.');\r\n                    throw error;\r\n                }\r\n\r\n                // Navigate to the login page after successful logout\r\n                // navigate('/Login');\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     fetch('http://localhost:6004/logout', {\r\n    //         method: \"GET\",\r\n    //         headers: {\r\n    //             Accept: \"appllication/json\",\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         },\r\n    //         credentials: \"include\"\r\n    \r\n    //     }).then((res) => {\r\n    //         // dispatch({ type: \"USER\", payload: false })\r\n    //         navigate('/Login');\r\n    //         if (res.status != 200) {\r\n    //             const error = new Error(res.error);\r\n    //             throw error;\r\n    //         }\r\n    //     }).catch((err) => {\r\n    //         console.log(err);\r\n    //     });\r\n    // },[]);\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAG9BF,SAAS,CAAC,MAAM;IACZ,MAAMU,cAAc,GAAGC,OAAO,CAACC,GAAG,CAAC,CAC/BC,KAAK,CAAC,mCAAmC,EAAE;MACvCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC,EACFJ,KAAK,CAAC,qCAAqC,EAAE;MACzCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC,EACFJ,KAAK,CAAC,qCAAqC,EAAE;MACzCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC,CACL,CAAC;IAEFP,cAAc,CACTQ,IAAI,CAAEC,SAAS,IAAK;MACjB;;MAEA,IAAGA,SAAS,CAACC,MAAM,IAAI,GAAG,EAAC;QACvBX,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MACI,IAAGU,SAAS,CAACC,MAAM,IAAI,GAAG,EAAC;QAC5BX,QAAQ,CAAC,QAAQ,CAAC;MACtB;MAEA,MAAMY,QAAQ,GAAGF,SAAS,CAACG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACH,MAAM,KAAK,GAAG,CAAC;MAE5D,IAAIC,QAAQ,EAAE;QACV,MAAMG,KAAK,GAAG,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QACzC,MAAMD,KAAK;MACf;;MAEA;MACA;IACJ,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACJ,KAAK,CAACG,GAAG,CAAC;IACtB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIrB,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEX,CAAC;AAAAI,EAAA,CAtFKD,MAAM;EAAA,QAESL,WAAW;AAAA;AAAA2B,EAAA,GAF1BtB,MAAM;AAwFZ,eAAeA,MAAM;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}