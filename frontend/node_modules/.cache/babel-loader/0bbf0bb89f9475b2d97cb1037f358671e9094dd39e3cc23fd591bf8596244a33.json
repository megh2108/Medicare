{"ast":null,"code":"var _jsxFileName = \"D:\\\\BVM\\\\8th SEM Subject\\\\Medicare\\\\frontend\\\\src\\\\Store\\\\auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Authcontext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  //\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    about: '',\n    licenceno: '',\n    special: '',\n    qualification: '',\n    experience: '',\n    hospitalAffiliaion: ''\n  });\n  const navigate = useNavigate();\n\n  // const [token, setToken] = useState(localStorage.getItem(\"Medicare_Token\"));\n\n  // below vali ek method che jene comment kareli che pan ena karta sari k stiretoken vala function ma\n  //je server parthi aave che ene hu setToken funcation the store kari dau ane pachi localstorage par set karu.\n\n  const adminAuthentication = async () => {\n    try {\n      const response = await fetch(\"http://localhost:6500/api/auth/admin-auth\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const responseData = await response.json();\n      console.log(\"response\", responseData.message);\n      if (response.status === 200) {\n        toast.success(` ${responseData.message}`);\n      } else {\n        navigate(\"/Home\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const storeTokenInLS = serverToken => {\n    setToken(serverToken);\n    return localStorage.setItem(\"Medicare_Token\", serverToken);\n  };\n\n  //for fetching login userid\n\n  const userId = id => {\n    setId(id);\n  };\n\n  //for toggling logout or login/signup\n  let isLoggedIn = !!token;\n  console.log(\"token\", token);\n  console.log(\"isLoggedin \", isLoggedIn);\n  const logoutUser = () => {\n    setToken(\"\");\n    return localStorage.removeItem(\"Medicare_Token\");\n  };\n\n  //fetching particular user\n  // useEffect(() => {\n  const fetchUserById = async () => {\n    try {\n      const response = await fetch(`http://localhost:6500/api/admin/getOneUser/${id}`, {\n        method: \"GET\"\n      });\n      const responseData = await response.json();\n      if (response.status === 404) {\n        toast.error(responseData.msg);\n      } else if (response.status === 200) {\n        const mappedData = {\n          name: responseData.name || '',\n          email: responseData.email || '',\n          phone: responseData.phone || '',\n          about: responseData.about || '',\n          licenceno: responseData.licenceno || '',\n          special: responseData.special || '',\n          qualification: responseData.qualification || '',\n          experience: responseData.experience || '',\n          hospitalAffiliaion: responseData.hospitalAffiliaion || ''\n        };\n        setFormData(mappedData);\n      } else {\n        toast.error(\"Internal Server Error\");\n      }\n    } catch (error) {\n      toast.error(\"Failed to fetch. Check console for details.\");\n      console.error(\"Error:\", error);\n    }\n  };\n\n  //     if (id) {\n  //         fetchUserById();\n\n  //     }\n  // }, [id]);\n\n  return /*#__PURE__*/_jsxDEV(Authcontext.Provider, {\n    value: {\n      storeTokenInLS,\n      logoutUser,\n      isLoggedIn,\n      token,\n      adminAuthentication,\n      userId,\n      id\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"TK98bnjAC2J4zWpXO8Ffoko9D50=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const authContextValue = useContext(Authcontext);\n  if (!authContextValue) {\n    throw new Error(\"useAuth used outside of provider\");\n  }\n  return authContextValue;\n};\n_s2(useAuth, \"pwoHaCq2/E07O7R0Qwgk+yykyiU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","NavLink","useNavigate","toast","jsxDEV","_jsxDEV","Authcontext","AuthProvider","children","_s","token","setToken","id","setId","formData","setFormData","name","email","phone","about","licenceno","special","qualification","experience","hospitalAffiliaion","navigate","adminAuthentication","response","fetch","method","headers","Authorization","responseData","json","console","log","message","status","success","error","storeTokenInLS","serverToken","localStorage","setItem","userId","isLoggedIn","logoutUser","removeItem","fetchUserById","msg","mappedData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","authContextValue","Error","$RefreshReg$"],"sources":["D:/BVM/8th SEM Subject/Medicare/frontend/src/Store/auth.js"],"sourcesContent":["import { createContext, useContext , useState} from \"react\";\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport const Authcontext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    \r\n    \r\n    const [token, setToken] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n\r\n\r\n    //\r\n    \r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        about: '',\r\n        licenceno: '',\r\n        special: '',\r\n        qualification: '',\r\n        experience: '',\r\n        hospitalAffiliaion: '',\r\n\r\n    });\r\n    const navigate = useNavigate();\r\n    \r\n    // const [token, setToken] = useState(localStorage.getItem(\"Medicare_Token\"));\r\n    \r\n    // below vali ek method che jene comment kareli che pan ena karta sari k stiretoken vala function ma\r\n    //je server parthi aave che ene hu setToken funcation the store kari dau ane pachi localstorage par set karu.\r\n    \r\n    const adminAuthentication = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:6500/api/auth/admin-auth\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            const responseData = await response.json();\r\n            console.log(\"response\", responseData.message);\r\n\r\n            if (response.status === 200) {\r\n                toast.success(` ${responseData.message}`);\r\n          }\r\n            else{               \r\n                navigate(\"/Home\");                    \r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const storeTokenInLS = (serverToken) => {\r\n        setToken(serverToken);\r\n        return localStorage.setItem(\"Medicare_Token\",serverToken);\r\n    } \r\n\r\n\r\n    //for fetching login userid\r\n\r\n    const userId = (id) =>{\r\n        setId(id);\r\n    }\r\n\r\n    //for toggling logout or login/signup\r\n    let isLoggedIn = !!token;\r\n    console.log(\"token\", token);\r\n    console.log(\"isLoggedin \", isLoggedIn);\r\n  \r\n\r\n    const logoutUser = ()=>{\r\n\r\n        setToken(\"\");\r\n        return localStorage.removeItem(\"Medicare_Token\");\r\n\r\n    }\r\n\r\n    //fetching particular user\r\n    // useEffect(() => {\r\n        const fetchUserById = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:6500/api/admin/getOneUser/${id}`, {\r\n                    method: \"GET\",\r\n                });\r\n\r\n                const responseData = await response.json();\r\n                \r\n                if (response.status === 404) {\r\n                    toast.error(responseData.msg);\r\n                }\r\n                else if (response.status === 200) {\r\n\r\n                    const mappedData = {\r\n                        name: responseData.name || '', \r\n                        email: responseData.email || '', \r\n                        phone: responseData.phone || '',\r\n                        about: responseData.about || '', \r\n                        licenceno: responseData.licenceno || '', \r\n                        special: responseData.special || '', \r\n                        qualification: responseData.qualification || '', \r\n                        experience: responseData.experience || '',\r\n                        hospitalAffiliaion: responseData.hospitalAffiliaion || '', \r\n                    };\r\n                    setFormData(mappedData);\r\n                    \r\n\r\n                } else {\r\n                    toast.error(\"Internal Server Error\");\r\n                }\r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch. Check console for details.\");\r\n                console.error(\"Error:\", error);\r\n            }\r\n        };\r\n\r\n    //     if (id) {\r\n    //         fetchUserById();\r\n\r\n    //     }\r\n    // }, [id]);\r\n\r\n\r\n\r\n    return (\r\n        <Authcontext.Provider value={{storeTokenInLS, logoutUser, isLoggedIn, token, adminAuthentication, userId,id}} >\r\n            {children}\r\n        </Authcontext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useAuth = ()=> {\r\n\r\n    const authContextValue = useContext(Authcontext);\r\n\r\n    if(!authContextValue){\r\n        throw new Error(\"useAuth used outside of provider\");\r\n    }\r\n    return authContextValue;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}