{"ast":null,"code":"var _jsxFileName = \"D:\\\\BVM\\\\8th SEM Subject\\\\Medicare\\\\frontend\\\\src\\\\Store\\\\auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Authcontext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const navigate = useNavigate();\n\n  // const [token, setToken] = useState(localStorage.getItem(\"Medicare_Token\"));\n\n  // below vali ek method che jene comment kareli che pan ena karta sari k stiretoken vala function ma\n  //je server parthi aave che ene hu setToken funcation the store kari dau ane pachi localstorage par set karu.\n\n  const adminAuthentication = async () => {\n    try {\n      const response = await fetch(\"http://localhost:6500/api/auth/admin-auth\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const responseData = await response.json();\n      console.log(\"response\", responseData.message);\n      if (response.status === 200) {\n        toast.success(` ${responseData.message}`);\n      } else {\n        navigate(\"/Home\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const storeTokenInLS = serverToken => {\n    setToken(serverToken);\n    return localStorage.setItem(\"Medicare_Token\", serverToken);\n  };\n\n  //for fetching login userid\n\n  const userId = id => {\n    setId(id);\n  };\n\n  //for toggling logout or login/signup\n  let isLoggedIn = !!token;\n  console.log(\"token\", token);\n  console.log(\"isLoggedin \", isLoggedIn);\n  const logoutUser = () => {\n    setToken(\"\");\n    return localStorage.removeItem(\"Medicare_Token\");\n  };\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    type: '',\n    phone: '',\n    about: '',\n    licenceno: '',\n    special: '',\n    qualification: '',\n    experience: '',\n    hospitalAffiliaion: '',\n    image: '',\n    availableTime: [{\n      startTime: '',\n      endTime: ''\n    }]\n  });\n\n  //fetching particular user\n  useEffect(() => {\n    const fetchUserById = async () => {\n      try {\n        const response = await fetch(`http://localhost:6500/api/admin/getOneUser/${id}`, {\n          method: \"GET\"\n        });\n        const responseData = await response.json();\n        if (response.status === 404) {\n          toast.error(responseData.msg);\n        } else if (response.status === 200) {\n          const mappedData = {\n            name: responseData.name || '',\n            email: responseData.email || '',\n            type: responseData.type || '',\n            phone: responseData.phone || '',\n            about: responseData.about || '',\n            licenceno: responseData.licenceno || '',\n            special: responseData.special || '',\n            qualification: responseData.qualification || '',\n            experience: responseData.experience || '',\n            hospitalAffiliaion: responseData.hospitalAffiliaion || '',\n            image: responseData.image || '',\n            availableTime: [{\n              startTime: responseData.availableTime.startTime || '',\n              endTime: responseData.availableTime.endTime || ''\n            }]\n          };\n          setFormData(mappedData);\n        } else {\n          toast.error(\"Internal Server Error\");\n        }\n      } catch (error) {\n        toast.error(\"Failed to fetch. Check console for details.\");\n        console.error(\"Error:\", error);\n      }\n    };\n    if (id) {\n      fetchUserById(id);\n    }\n  }, [id]);\n  const [doctors, setDoctors] = useState([]);\n  const getDoctorData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:6500/api/admin/getDoctor\", {\n        method: \"GET\"\n      });\n      const responseData = await response.json();\n      setDoctors(responseData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getDoctorData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Authcontext.Provider, {\n    value: {\n      storeTokenInLS,\n      logoutUser,\n      isLoggedIn,\n      token,\n      adminAuthentication,\n      userId,\n      id,\n      formData,\n      setFormData,\n      doctors,\n      setDoctors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"X9nXqfdrG3ZYoC6UGpkJ2qcARZw=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const authContextValue = useContext(Authcontext);\n  if (!authContextValue) {\n    throw new Error(\"useAuth used outside of provider\");\n  }\n  return authContextValue;\n};\n_s2(useAuth, \"pwoHaCq2/E07O7R0Qwgk+yykyiU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","NavLink","useNavigate","toast","jsxDEV","_jsxDEV","Authcontext","AuthProvider","children","_s","token","setToken","id","setId","navigate","adminAuthentication","response","fetch","method","headers","Authorization","responseData","json","console","log","message","status","success","error","storeTokenInLS","serverToken","localStorage","setItem","userId","isLoggedIn","logoutUser","removeItem","formData","setFormData","name","email","type","phone","about","licenceno","special","qualification","experience","hospitalAffiliaion","image","availableTime","startTime","endTime","fetchUserById","msg","mappedData","doctors","setDoctors","getDoctorData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","authContextValue","Error","$RefreshReg$"],"sources":["D:/BVM/8th SEM Subject/Medicare/frontend/src/Store/auth.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport const Authcontext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n\r\n    const [token, setToken] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // const [token, setToken] = useState(localStorage.getItem(\"Medicare_Token\"));\r\n\r\n    // below vali ek method che jene comment kareli che pan ena karta sari k stiretoken vala function ma\r\n    //je server parthi aave che ene hu setToken funcation the store kari dau ane pachi localstorage par set karu.\r\n\r\n    const adminAuthentication = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:6500/api/auth/admin-auth\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            const responseData = await response.json();\r\n            console.log(\"response\", responseData.message);\r\n\r\n            if (response.status === 200) {\r\n                toast.success(` ${responseData.message}`);\r\n            }\r\n            else {\r\n                navigate(\"/Home\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const storeTokenInLS = (serverToken) => {\r\n        setToken(serverToken);\r\n        return localStorage.setItem(\"Medicare_Token\", serverToken);\r\n    }\r\n\r\n\r\n    //for fetching login userid\r\n\r\n    const userId = (id) => {\r\n        setId(id);\r\n    }\r\n\r\n    //for toggling logout or login/signup\r\n    let isLoggedIn = !!token;\r\n    console.log(\"token\", token);\r\n    console.log(\"isLoggedin \", isLoggedIn);\r\n\r\n\r\n    const logoutUser = () => {\r\n\r\n        setToken(\"\");\r\n        return localStorage.removeItem(\"Medicare_Token\");\r\n\r\n    }\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        type:'',\r\n        phone: '',\r\n        about: '',\r\n        licenceno: '',\r\n        special: '',\r\n        qualification: '',\r\n        experience: '',\r\n        hospitalAffiliaion: '',\r\n        image:'',\r\n        availableTime: [{ startTime: '', endTime: '' }]\r\n\r\n    });\r\n\r\n\r\n\r\n    //fetching particular user\r\n    useEffect(() => {\r\n        const fetchUserById = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:6500/api/admin/getOneUser/${id}`, {\r\n                    method: \"GET\",\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                if (response.status === 404) {\r\n                    toast.error(responseData.msg);\r\n                }\r\n                else if (response.status === 200) {\r\n\r\n                    const mappedData = {\r\n                        name: responseData.name || '',\r\n                        email: responseData.email || '',\r\n                        type: responseData.type || '',\r\n                        phone: responseData.phone || '',\r\n                        about: responseData.about || '',\r\n                        licenceno: responseData.licenceno || '',\r\n                        special: responseData.special || '',\r\n                        qualification: responseData.qualification || '',\r\n                        experience: responseData.experience || '',\r\n                        hospitalAffiliaion: responseData.hospitalAffiliaion || '',\r\n                        image:responseData.image || '',\r\n                        availableTime: [{ startTime: responseData.availableTime.startTime || '', endTime: responseData.availableTime.endTime ||'' }]\r\n                    };\r\n                    setFormData(mappedData);\r\n\r\n\r\n                } else {\r\n                    toast.error(\"Internal Server Error\");\r\n                }\r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch. Check console for details.\");\r\n                console.error(\"Error:\", error);\r\n            }\r\n        };\r\n\r\n        if (id) {\r\n            fetchUserById(id);\r\n\r\n        }\r\n    }, [id]);\r\n\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n\r\n    const getDoctorData = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:6500/api/admin/getDoctor\", {\r\n                method: \"GET\",\r\n            });\r\n            const responseData = await response.json();\r\n            setDoctors(responseData);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getDoctorData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Authcontext.Provider value={{ storeTokenInLS, logoutUser, isLoggedIn, token, adminAuthentication, userId, id ,formData , setFormData,doctors,setDoctors}} >\r\n            {children}\r\n        </Authcontext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useAuth = () => {\r\n\r\n    const authContextValue = useContext(Authcontext);\r\n\r\n    if (!authContextValue) {\r\n        throw new Error(\"useAuth used outside of provider\");\r\n    }\r\n    return authContextValue;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}