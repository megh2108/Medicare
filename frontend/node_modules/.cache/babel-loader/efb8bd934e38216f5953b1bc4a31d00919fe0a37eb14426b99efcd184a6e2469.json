{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = () => {\n  _s();\n  const navigate = useNavigate();\n  // const [isMounted, setIsMounted] = useState(true);\n\n  useEffect(() => {\n    const userLogoutPromise = fetch('http://localhost:6004/user-logout', {\n      method: \"GET\",\n      headers: {\n        Accept: 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include'\n    });\n    const doctorLogoutPromise = fetch('http://localhost:6004/doctor-logout', {\n      method: \"GET\",\n      headers: {\n        Accept: 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include'\n    });\n    const googleLogoutPromise = fetch('http://localhost:6004/google-logout', {\n      method: \"GET\",\n      headers: {\n        Accept: 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include'\n    });\n    Promise.all([userLogoutPromise, doctorLogoutPromise, googleLogoutPromise]).then(responses => {\n      const allLoggedOut = responses.every(res => res.status === 200);\n      if (allLoggedOut) {\n        window.alert('Successfully logged out.');\n        navigate('/Login');\n      } else {\n        const error = new Error('Logout failed.');\n        throw error;\n      }\n    })\n    // const logoutRequests = Promise.all([userLogoutPromise, doctorLogoutPromise, googleLogoutPromise]);\n\n    // logoutRequests.then((responses) => {\n    //     navigate('/Login');\n\n    //     if (responses.status == 200) {\n    //         window.alert(\"User Successfully Logout\");\n    //         navigate('/Login');\n    //     }\n    //     else if (responses.status == 201) {\n    //         window.alert(\"Doctor Successfully Logout\");\n    //         navigate('/Login');\n    //     }\n\n    //     const hasError = responses.some((res) => res.status !== 200);\n\n    //     if (hasError) {\n    //         const error = new Error('Logout failed.');\n    //         throw error;\n    //     }\n\n    // })\n    .catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  // useEffect(() => {\n\n  //     fetch('http://localhost:6004/logout', {\n  //         method: \"GET\",\n  //         headers: {\n  //             Accept: \"appllication/json\",\n  //             \"Content-Type\": \"application/json\"\n  //         },\n  //         credentials: \"include\"\n\n  //     }).then((res) => {\n  //         // dispatch({ type: \"USER\", payload: false })\n  //         navigate('/Login');\n  //         if (res.status != 200) {\n  //             const error = new Error(res.error);\n  //             throw error;\n  //         }\n  //     }).catch((err) => {\n  //         console.log(err);\n  //     });\n  // },[]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Logout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Logout","_s","navigate","userLogoutPromise","fetch","method","headers","Accept","credentials","doctorLogoutPromise","googleLogoutPromise","Promise","all","then","responses","allLoggedOut","every","res","status","window","alert","error","Error","catch","err","console","_c","$RefreshReg$"],"sources":["H:/BVM/8th SEM Subject/Medicare/frontend/src/Components/General/Logout/Logout.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Logout = () => {\r\n\r\n    const navigate = useNavigate();\r\n    // const [isMounted, setIsMounted] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        const userLogoutPromise = fetch('http://localhost:6004/user-logout', {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: 'application/json',\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: 'include',\r\n        });\r\n        const doctorLogoutPromise = fetch('http://localhost:6004/doctor-logout', {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: 'application/json',\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: 'include',\r\n        });\r\n        const googleLogoutPromise = fetch('http://localhost:6004/google-logout', {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: 'application/json',\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: 'include',\r\n        });\r\n        Promise.all([userLogoutPromise, doctorLogoutPromise, googleLogoutPromise])\r\n            .then((responses) => {\r\n                    const allLoggedOut = responses.every((res) => res.status === 200);\r\n\r\n                    if (allLoggedOut) {\r\n                        window.alert('Successfully logged out.');\r\n                        navigate('/Login');\r\n                    } else {\r\n                        const error = new Error('Logout failed.');\r\n                        throw error;\r\n                    }\r\n            })\r\n            // const logoutRequests = Promise.all([userLogoutPromise, doctorLogoutPromise, googleLogoutPromise]);\r\n\r\n            // logoutRequests.then((responses) => {\r\n            //     navigate('/Login');\r\n\r\n            //     if (responses.status == 200) {\r\n            //         window.alert(\"User Successfully Logout\");\r\n            //         navigate('/Login');\r\n            //     }\r\n            //     else if (responses.status == 201) {\r\n            //         window.alert(\"Doctor Successfully Logout\");\r\n            //         navigate('/Login');\r\n            //     }\r\n\r\n            //     const hasError = responses.some((res) => res.status !== 200);\r\n\r\n            //     if (hasError) {\r\n            //         const error = new Error('Logout failed.');\r\n            //         throw error;\r\n            //     }\r\n\r\n\r\n            // })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n\r\n        \r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     fetch('http://localhost:6004/logout', {\r\n    //         method: \"GET\",\r\n    //         headers: {\r\n    //             Accept: \"appllication/json\",\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         },\r\n    //         credentials: \"include\"\r\n\r\n    //     }).then((res) => {\r\n    //         // dispatch({ type: \"USER\", payload: false })\r\n    //         navigate('/Login');\r\n    //         if (res.status != 200) {\r\n    //             const error = new Error(res.error);\r\n    //             throw error;\r\n    //         }\r\n    //     }).catch((err) => {\r\n    //         console.log(err);\r\n    //     });\r\n    // },[]);\r\n\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B;;EAEAF,SAAS,CAAC,MAAM;IAEZ,MAAMU,iBAAiB,GAAGC,KAAK,CAAC,mCAAmC,EAAE;MACjEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,MAAMC,mBAAmB,GAAGL,KAAK,CAAC,qCAAqC,EAAE;MACrEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,MAAME,mBAAmB,GAAGN,KAAK,CAAC,qCAAqC,EAAE;MACrEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC;IACFG,OAAO,CAACC,GAAG,CAAC,CAACT,iBAAiB,EAAEM,mBAAmB,EAAEC,mBAAmB,CAAC,CAAC,CACrEG,IAAI,CAAEC,SAAS,IAAK;MACb,MAAMC,YAAY,GAAGD,SAAS,CAACE,KAAK,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAK,GAAG,CAAC;MAEjE,IAAIH,YAAY,EAAE;QACdI,MAAM,CAACC,KAAK,CAAC,0BAA0B,CAAC;QACxClB,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MAAM;QACH,MAAMmB,KAAK,GAAG,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QACzC,MAAMD,KAAK;MACf;IACR,CAAC;IACD;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;;IAGA;IAAA,CACCE,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACJ,KAAK,CAACG,GAAG,CAAC;IACtB,CAAC,CAAC;EAGV,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIzB,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEX,CAAC;AAAAI,EAAA,CApGKD,MAAM;EAAA,QAESL,WAAW;AAAA;AAAA+B,EAAA,GAF1B1B,MAAM;AAsGZ,eAAeA,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}